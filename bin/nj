#!/usr/bin/env node

'use strict';

process.env.NODE_PATH = __dirname + '/../node_modules/';

const program = require('commander');
program.version(require('../package').version);
program.usage('<command>');

//Print current version(https://github.com/tj/commander.js/issues/560)
const vPos = process.argv.indexOf('-v');
if (vPos > -1) {
  process.argv[vPos] = '-V';
}
const CNPM_DESCRIPTION = 'Use china mirror of npm';

program
  .command('init')
  .description('Init a new project')
  .option('--cnpm', CNPM_DESCRIPTION)
  .action(() => {
    require('../lib/init')();
  });

program
  .command('add-page')
  .description('Add a new page')
  .alias('ap')
  .action(() => {
    require('../lib/addPage')();
  });

program
  .command('add-component')
  .description('Add a new component')
  .alias('ac')
  .action(() => {
    require('../lib/addComponent')();
  });

program
  .command('add-store')
  .description('Add a new store')
  .alias('as')
  .action(() => {
    require('../lib/addStore')();
  });

program
  .command('upgrade')
  .description('Upgrade to the latest version')
  .option('--cnpm', CNPM_DESCRIPTION)
  .action(() => {
    require('../lib/upgrade')();
  });

program
  .command('install')
  .description('Install npm packages')
  .option('--cnpm', CNPM_DESCRIPTION)
  .alias('i')
  .action(() => {
    require('../lib/install')();
  });

program
  .command('update')
  .description('Update npm packages')
  .option('--cnpm', CNPM_DESCRIPTION)
  .alias('up')
  .action(() => {
    require('../lib/install')('update');
  });

program.parse(process.argv);

if (!program.args.length) {
  program.help();
}
