<#-if #{!mobx}#>import { types } from 'mobx-state-tree';
</#-if>import { observable, toJS, action } from 'mobx';
import axios from 'axios';
import Notification from '../../utils/notification';

<#-if #{mobx}#>class #{pageName | capitalize}#Store {
  @observable bool = true;
  @observable strs = '';
  @observable arrs = [];
  @observable modData = null;

  @action
  getModData(params) {
    return axios.get(`${__HOST}/#{pageName}#/getModData`, {
      params
    })
      .then(({ data: result }) => {
        if (result.success) {
          this.modData = result.data;
        } else {
          Notification.error({
            message: '获取数据错误:' + result.message,
            duration: null
          });
        }
      })
      .catch((ex) => {
        Notification.error({
          message: '获取数据异常:' + ex,
          duration: null
        });
      });
  }
}<#-else>const #{pageName | capitalize}#Store = types
  .model('#{pageName | capitalize}#Store', {
    bool: types.optional(types.boolean, true),
    strs: types.optional(types.string, ''),
    arrs: types.optional(types.array(types.string), []),
  })
  .volatile(self => ({
    modData: null,
  }))
  .views(self => ({

  }))
  .actions(self => ({
    afterCreate() {},

    getModData(params) {
      return axios.get(`${__HOST}/#{pageName}#/getModData`, {
        params
      })
        .then(self.setModData)
        .catch((ex) => {
          Notification.error({
            message: '获取数据异常:' + ex,
            duration: null
          });
        });
    },

    setModData({ data: result }) {
      if (result.success) {
        self.modData = result.data;
      } else {
        Notification.error({
          message: '获取数据错误:' + result.message,
          duration: null
        });
      }
    }
  }));</#-else></#-if>

export default #{pageName | capitalize}#Store;
